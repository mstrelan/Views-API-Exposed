<?php

/**
 * @file
 * To use flickholdr.com as image provider in content generation.
 */

/**
 * Implements hook_devel_image_provider().
 */
function flickholdr_image_provider_devel_image_provider() {
  $item = array(
    '_flickholdr_image_provider_generate_image' => 'flickholdr.com'
  );
  return $item;
}

/**
 * Function to generate image.
 */
function _flickholdr_image_provider_generate_image($object, $field, $instance, $bundle) {
  static $images = array();

  $min_resolution = empty($instance['settings']['min_resolution']) ? '100x100' : $instance['settings']['min_resolution'];
  $max_resolution = empty($instance['settings']['max_resolution']) ? '600x600' : $instance['settings']['max_resolution'];

  $extension = 'jpg';
  $provider_base_url = 'http://flickholdr.com';

  if (!isset($images[$extension][$min_resolution][$max_resolution]) || count($images[$extension][$min_resolution][$max_resolution]) <= DEVEL_GENERATE_IMAGE_MAX) {
    if ($tmp_file = drupal_tempnam('temporary://', 'imagefield_')) {
      $destination = $tmp_file . '.' . $extension;
      file_unmanaged_move($tmp_file, $destination, FILE_EXISTS_REPLACE);

      $min = explode('x', $min_resolution);
      $max = explode('x', $max_resolution);

      $width = rand((int) $min[0], (int) $max[0]);
      $height = rand((int) $min[0], (int) $max[0]);

      $bw = variable_get('devel_image_provider_flickholdr_bw', FALSE);
      $tags = variable_get('devel_image_provider_flickholdr_tags', '');

      $url = "$provider_base_url/$width/$height";

      if (!empty($tags)) {
        $url .= '/' . $tags;
      }

      $url = ($bw) ? $url . '/bw' : $url;

      // Generate seed value.
      $rand_value = rand(0, variable_get('devel_image_provider_flickholdr_seed', 100));
      $url .= '/' . $rand_value;

      $method = variable_get('devel_image_provider_flickholdr_get_method', 'curl');
      $path = devel_image_provider_get_file($url, $destination, $method);

      $source = new stdClass();
      $source->uri = $path;
      $source->uid = 1; // TODO: randomize? Use case specific.
      $source->filemime = 'image/jpg';
      $destination_dir = $field['settings']['uri_scheme'] . '://' . $instance['settings']['file_directory'];
      file_prepare_directory($destination_dir, FILE_CREATE_DIRECTORY);
      $destination = $destination_dir . '/' . basename($path);

      $file = file_move($source, $destination, FILE_CREATE_DIRECTORY);
      $images[$extension][$min_resolution][$max_resolution][$file->fid] = $file;

      $object_field['fid'] = $file->fid;
      $object_field['alt'] = devel_create_greeking(4);
      $object_field['title'] = devel_create_greeking(4);
      return $object_field;
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function flickholdr_image_provider_form_devel_image_provider_providers_form_alter(&$form, &$form_state, $form_id) {
  $form['devel_image_provider_flickholdr'] = array(
    '#type' => 'fieldset',
    '#title' => t('Flickholdr settings.'),
    '#states' => array(
      'visible' => array(
        ':input[name="image_devel_generate_function"]' => array('value' => '_flickholdr_image_provider_generate_image'),
      ),
    ),
  );
  $form['devel_image_provider_flickholdr']['devel_image_provider_flickholdr_get_method'] = array(
    '#type' => 'radios',
    '#title' => t('Method to get files'),
    '#default_value' => variable_get('devel_image_provider_flickholdr_get_method', 'curl'),
    //'#options' => drupal_map_assoc(array('file_get_contents')),
    '#options' => drupal_map_assoc(array('curl', 'gd', 'file_get_contents')),
  );
  $form['devel_image_provider_flickholdr']['devel_image_provider_flickholdr_bw'] = array(
    '#type' => 'checkbox',
    '#title' => t('Flickholdr Black & White'),
    '#default_value' => variable_get('devel_image_provider_flickholdr_bw', FALSE),
  );
  $form['devel_image_provider_flickholdr']['devel_image_provider_flickholdr_tags'] = array(
    '#type' => 'textfield',
    '#title' => t('Flickholdr tags'),
    '#description' => t('Comma separated values. You must omit blank spaces.'),
    '#size' => 90,
    '#default_value' => variable_get('devel_image_provider_flickholdr_tags', ''),
  );
  $form['devel_image_provider_flickholdr']['devel_image_provider_flickholdr_seed'] = array(
    '#type' => 'textfield',
    '#title' => t('Flickholdr seed numer'),
    '#description' => t('Number of random values, a low value would be faster but generate a lower variety of images.'),
    '#size' => 90,
    '#default_value' => variable_get('devel_image_provider_flickholdr_seed', 100),
  );
}
